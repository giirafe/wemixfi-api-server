/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { StWEMIX, StWEMIXInterface } from "../StWEMIX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wemixAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stWemixAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wemixAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stWemixAmount",
        type: "uint256",
      },
    ],
    name: "Fee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "phase",
        type: "uint256",
      },
    ],
    name: "PhaseShift",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currFee",
        type: "uint256",
      },
    ],
    name: "SetFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staking",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "SetStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wemixAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stWemixAmount",
        type: "uint256",
      },
    ],
    name: "Withdrew",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePhaseOne",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePhaseTwo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePhaseTwo",
        type: "uint256",
      },
    ],
    name: "feeUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shareAmount_",
        type: "uint256",
      },
    ],
    name: "getPooledWEMIXBySharesWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "wemixAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wemixAmount_",
        type: "uint256",
      },
    ],
    name: "getSharesByPooledWEMIXWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "shareAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPooledWEMIXWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pid_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePhaseOne_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePhaseTwo_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseTwo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardOf_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61220180620000ee6000396000f3fe6080604052600436106101e75760003560e01c806375d9b07411610102578063d0e30db011610095578063e11f02d711610064578063e11f02d714610543578063f10684541461055e578063f2fde38b14610574578063f69e20461461059457600080fd5b8063d0e30db0146104e6578063d13f90b4146104ee578063dd62ed3e1461050e578063ddca3f431461052e57600080fd5b8063a457c2d7116100d1578063a457c2d714610470578063a9059cbb14610490578063b291809c146104b0578063b977d575146104d057600080fd5b806375d9b074146104135780638da5cb5b1461042857806395d89b4114610446578063a41e7eb61461045b57600080fd5b8063313ce5671161017a5780635c975abb116101495780635c975abb1461038e57806361d027b3146103a657806370a08231146103c6578063715018a6146103fc57600080fd5b8063313ce5671461030457806339509351146103205780634cf088d9146103405780635c961a331461037857600080fd5b80631d62ebd9116101b65780631d62ebd9146102915780631f72bfb3146102b157806323b872dd146102d15780632e1a7d4d146102f157600080fd5b806306fdde03146101f3578063095ea7b31461021e5780630997e5571461024e57806318160ddd1461027c57600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b506102086105a9565b6040516102159190611e36565b60405180910390f35b34801561022a57600080fd5b5061023e610239366004611ea2565b61063b565b6040519015158152602001610215565b34801561025a57600080fd5b5061026e610269366004611ecc565b610653565b604051908152602001610215565b34801561028857600080fd5b5060355461026e565b34801561029d57600080fd5b5061026e6102ac366004611ee5565b610707565b3480156102bd57600080fd5b5061026e6102cc366004611ecc565b61075d565b3480156102dd57600080fd5b5061023e6102ec366004611f07565b61078b565b61026e6102ff366004611ecc565b6107af565b34801561031057600080fd5b5060405160128152602001610215565b34801561032c57600080fd5b5061023e61033b366004611ea2565b6107d6565b34801561034c57600080fd5b5060fc54610360906001600160a01b031681565b6040516001600160a01b039091168152602001610215565b34801561038457600080fd5b5061026e60ff5481565b34801561039a57600080fd5b5060975460ff1661023e565b3480156103b257600080fd5b5060fb54610360906001600160a01b031681565b3480156103d257600080fd5b5061026e6103e1366004611ee5565b6001600160a01b031660009081526033602052604090205490565b34801561040857600080fd5b506104116107f8565b005b34801561041f57600080fd5b5061026e61080c565b34801561043457600080fd5b506065546001600160a01b0316610360565b34801561045257600080fd5b5061020861081b565b34801561046757600080fd5b5061041161082a565b34801561047c57600080fd5b5061023e61048b366004611ea2565b610a7e565b34801561049c57600080fd5b5061023e6104ab366004611ea2565b610af9565b3480156104bc57600080fd5b506104116104cb366004611ecc565b610b07565b3480156104dc57600080fd5b5061026e60fe5481565b61026e610ba6565b3480156104fa57600080fd5b50610411610509366004611f43565b610bc7565b34801561051a57600080fd5b5061026e610529366004611f90565b610e04565b34801561053a57600080fd5b5061026e610e2f565b34801561054f57600080fd5b506101005461023e9060ff1681565b34801561056a57600080fd5b5061026e60fd5481565b34801561058057600080fd5b5061041161058f366004611ee5565b610e7f565b3480156105a057600080fd5b50610411610ef8565b6060603680546105b890611fc3565b80601f01602080910402602001604051908101604052809291908181526020018280546105e490611fc3565b80156106315780601f1061060657610100808354040283529160200191610631565b820191906000526020600020905b81548152906001019060200180831161061457829003601f168201915b5050505050905090565b600033610649818585610f00565b5060019392505050565b600061065e60355490565b6106d55760405162461bcd60e51b815260206004820152603760248201527f537457454d49583a3a676574506f6f6c656457454d495842795368617265735760448201527f6974684665653a204e657665722068617070656e65642e00000000000000000060648201526084015b60405180910390fd5b60006106df611024565b90506106ea60355490565b6106f4828561200e565b6106fe919061202d565b9150505b919050565b600080610712611040565b905061071d60355490565b61072a5750600092915050565b6035548161074d856001600160a01b031660009081526033602052604090205490565b6106f4919061200e565b50919050565b600080610768611024565b90508061077757829150610757565b8061078160355490565b6106f4908561200e565b600033610799858285611093565b6107a485858561110d565b506001949350505050565b60006107b96112b8565b6107c16112fe565b6107ca82611358565b9050610702600160c955565b6000336106498185856107e98383610e04565b6107f3919061204f565b610f00565b61080061157b565b61080a60006115d5565b565b6000610816611024565b905090565b6060603780546105b890611fc3565b61083261157b565b61083a611627565b6101005460ff161561089a5760405162461bcd60e51b815260206004820152602360248201527f537457454d49583a3a70686173653a204d75737420626520696e20706861736560448201526210189760e91b60648201526084016106cc565b60006108a4610e2f565b905060006108b0611040565b60fc5460fd54604051636eeaf0d960e11b815260048101919091523060248201529192506001600160a01b03169063ddd5e1b290604401600060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505060fb54604051600093506001600160a01b03909116915084908381818185875af1925050503d8060008114610968576040519150601f19603f3d011682016040523d82523d6000602084013e61096d565b606091505b50509050806109ca5760405162461bcd60e51b8152602060048201526024808201527f537457454d49583a3a5f6465706f7369743a204661696c20746f2073656e64206044820152633332b29760e11b60648201526084016106cc565b60fc5460fd5460405163695f3f5d60e01b81526001600160a01b039092169163695f3f5d918591610a05919083903090600090600401612067565b6000604051808303818588803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b5050505050610a3f611670565b610100805460ff191660011790556040516002907f5fa5c5f918a55cfc7631e486735a0ed6fa5a8c381e41808d7e5545c17fac707290600090a2505050565b60003381610a8c8286610e04565b905083811015610aec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106cc565b6107a48286868403610f00565b60003361064981858561110d565b610b0f61157b565b612710811115610b615760405162461bcd60e51b815260206004820181905260248201527f537457454d49583a3a6665655570646174653a20494e56414c49445f4645452e60448201526064016106cc565b60ff80549082905560408051828152602081018490527f032dc6a2d839eb179729a55633fdf1c41a1fc4739394154117005db2b354b9b5910160405180910390a15050565b6000610bb06112fe565b610bb86116c2565b9050610bc4600160c955565b90565b600054610100900460ff1615808015610be75750600054600160ff909116105b80610c015750303b158015610c01575060005460ff166001145b610c645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106cc565b6000805460ff191660011790558015610c87576000805461ff0019166101001790555b610cd46040518060400160405280600c81526020016b0a6e8c2d6cac840ae8a9a92b60a31b815250604051806040016040528060078152602001660e6e8ae8a9a92b60cb1b81525061185d565b610cdc611892565b610ce46118c1565b610cec6118f0565b6001600160a01b038616610d125760405162461bcd60e51b81526004016106cc9061208d565b6001600160a01b038516610d385760405162461bcd60e51b81526004016106cc9061208d565b60fb80546001600160a01b038781166001600160a01b03199283161790925560fc8054928916929091168217905560fd85905560408051918252602082018690527fdfe5cd63052d98022e05b6f634d3184b5d10944000c2f633c83e5b4eaa3fbbf6910160405180910390a160fe83905560ff829055610db661191f565b8015610dfc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600080610e3a61195c565b6101005490915060ff1615610e6a5761271060ff5482610e5a919061200e565b610e64919061202d565b91505090565b61271060fe5482610e5a919061200e565b5090565b610e8761157b565b6001600160a01b038116610eec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106cc565b610ef5816115d5565b50565b61080a6119e3565b6001600160a01b038316610f625760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106cc565b6001600160a01b038216610fc35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106cc565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061102e611040565b611036611a47565b610816919061204f565b600061104a61195c565b6101005490915060ff16156110805761271060ff5461271061106c91906120d2565b611076908361200e565b610816919061202d565b61271060fe5461271061106c91906120d2565b600061109f8484610e04565b9050600019811461110757818110156110fa5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106cc565b6111078484848403610f00565b50505050565b6001600160a01b0383166111715760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106cc565b6001600160a01b0382166111d35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106cc565b6001600160a01b0383166000908152603360205260409020548181101561124b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106cc565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112ab9086815260200190565b60405180910390a3611107565b60975460ff161561080a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106cc565b600260c95414156113515760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106cc565b600260c955565b600033826113b35760405162461bcd60e51b815260206004820152602260248201527f537457454d49583a3a5f77697468647261773a43414e4e4f545f574954484452604482015261415760f01b60648201526084016106cc565b6001600160a01b0381166000908152603360205260409020548311156114295760405162461bcd60e51b815260206004820152602560248201527f537457454d49583a3a5f77697468647261773a4e4f545f454e4f5547485f42416044820152644c414e434560d81b60648201526084016106cc565b6000611433610e2f565b905060006114408261075d565b905061144b85610653565b93506114578386611ad9565b61145f6119e3565b60fc5460fd5460405163ac39871760e01b81526001600160a01b039092169163ac398717916114979188908890600090600401612067565b600060405180830381600087803b1580156114b157600080fd5b505af11580156114c5573d6000803e3d6000fd5b505060fb546114e092506001600160a01b0316905082611c0d565b60408051858152602081018790526001600160a01b038516917fadec52fcd1408589179b85e44b434374db078b4eaf793e7d1a1bb0ae4ecfeee5910160405180910390a260fb5460408051848152602081018490526001600160a01b03909216917fc1e1261fb62788fd4036ae7b01d7139f3523dac26e0c98f808154bfa20289fb1910160405180910390a2505050919050565b600160c955565b6065546001600160a01b0316331461080a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cc565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff1661080a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106cc565b611678611627565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600033346117125760405162461bcd60e51b815260206004820152601e60248201527f537457454d49583a3a5f6465706f7369743a5a45524f5f4445504f534954000060448201526064016106cc565b600061171c610e2f565b905060006117298261075d565b90506117343461075d565b93506117408385611c0d565b60fc5460fd5460405163695f3f5d60e01b81526001600160a01b039092169163695f3f5d91349161177b919083903090600090600401612067565b6000604051808303818588803b15801561179457600080fd5b505af11580156117a8573d6000803e3d6000fd5b50505050506117b56119e3565b60fb546117cb906001600160a01b031682611c0d565b60408051348152602081018690526001600160a01b038516917f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca910160405180910390a260fb5460408051848152602081018490526001600160a01b03909216917fc1e1261fb62788fd4036ae7b01d7139f3523dac26e0c98f808154bfa20289fb1910160405180910390a250505090565b600054610100900460ff166118845760405162461bcd60e51b81526004016106cc906120e9565b61188e8282611cce565b5050565b600054610100900460ff166118b95760405162461bcd60e51b81526004016106cc906120e9565b61080a611d1c565b600054610100900460ff166118e85760405162461bcd60e51b81526004016106cc906120e9565b61080a611d4c565b600054610100900460ff166119175760405162461bcd60e51b81526004016106cc906120e9565b61080a611d7f565b6119276112b8565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116a53390565b60fc5460fd54604051634c4b4f4160e11b815260048101919091523060248201526000916001600160a01b0316906398969e829060440160206040518083038186803b1580156119ab57600080fd5b505afa1580156119bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190612134565b60fc5460fd5460405163d846612160e01b815260048101919091523060248201526001600160a01b039091169063d846612190604401600060405180830381600087803b158015611a3357600080fd5b505af1158015611107573d6000803e3d6000fd5b60fc5460fd54604051631069f3b560e01b815260048101919091523060248201526000916001600160a01b031690631069f3b59060440160a06040518083038186803b158015611a9657600080fd5b505afa158015611aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ace919061214d565b51919050565b505050565b6001600160a01b038216611b395760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106cc565b6001600160a01b03821660009081526033602052604090205481811015611bad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106cc565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b038216611c635760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106cc565b8060356000828254611c75919061204f565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff16611cf55760405162461bcd60e51b81526004016106cc906120e9565b8151611d08906036906020850190611da6565b508051611ad4906037906020840190611da6565b600054610100900460ff16611d435760405162461bcd60e51b81526004016106cc906120e9565b61080a336115d5565b600054610100900460ff16611d735760405162461bcd60e51b81526004016106cc906120e9565b6097805460ff19169055565b600054610100900460ff166115745760405162461bcd60e51b81526004016106cc906120e9565b828054611db290611fc3565b90600052602060002090601f016020900481019282611dd45760008555611e1a565b82601f10611ded57805160ff1916838001178555611e1a565b82800160010185558215611e1a579182015b82811115611e1a578251825591602001919060010190611dff565b50610e7b9291505b80821115610e7b5760008155600101611e22565b600060208083528351808285015260005b81811015611e6357858101830151858201604001528201611e47565b81811115611e75576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070257600080fd5b60008060408385031215611eb557600080fd5b611ebe83611e8b565b946020939093013593505050565b600060208284031215611ede57600080fd5b5035919050565b600060208284031215611ef757600080fd5b611f0082611e8b565b9392505050565b600080600060608486031215611f1c57600080fd5b611f2584611e8b565b9250611f3360208501611e8b565b9150604084013590509250925092565b600080600080600060a08688031215611f5b57600080fd5b611f6486611e8b565b9450611f7260208701611e8b565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215611fa357600080fd5b611fac83611e8b565b9150611fba60208401611e8b565b90509250929050565b600181811c90821680611fd757607f821691505b6020821081141561075757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561202857612028611ff8565b500290565b60008261204a57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561206257612062611ff8565b500190565b93845260208401929092526001600160a01b031660408301521515606082015260800190565b60208082526025908201527f537457454d49583a3a696e697469616c697a653a20494e56414c49445f4144446040820152642922a9a99760d91b606082015260800190565b6000828210156120e4576120e4611ff8565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561214657600080fd5b5051919050565b600060a0828403121561215f57600080fd5b60405160a0810181811067ffffffffffffffff8211171561219057634e487b7160e01b600052604160045260246000fd5b80604052508251815260208301516020820152604083015160408201526060830151606082015260808301516080820152809150509291505056fea2646970667358221220ae9e11b5828467b115d166ff2346ffe501b2a922c269ad07399c14ae71f6f95064736f6c63430008090033";

type StWEMIXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StWEMIXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StWEMIX__factory extends ContractFactory {
  constructor(...args: StWEMIXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StWEMIX & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StWEMIX__factory {
    return super.connect(runner) as StWEMIX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StWEMIXInterface {
    return new Interface(_abi) as StWEMIXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StWEMIX {
    return new Contract(address, _abi, runner) as unknown as StWEMIX;
  }
}

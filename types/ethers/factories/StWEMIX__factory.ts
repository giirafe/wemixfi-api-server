/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { StWEMIX, StWEMIXInterface } from "../StWEMIX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wemixAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stWemixAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wemixAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stWemixAmount",
        type: "uint256",
      },
    ],
    name: "Fee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "phase",
        type: "uint256",
      },
    ],
    name: "PhaseShift",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currFee",
        type: "uint256",
      },
    ],
    name: "SetFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staking",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "SetStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prev",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "curr",
        type: "address",
      },
    ],
    name: "UpdateUserInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wemixAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stWemixAmount",
        type: "uint256",
      },
    ],
    name: "Withdrew",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableUserInfoContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePhaseOne",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePhaseTwo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePhaseTwo",
        type: "uint256",
      },
    ],
    name: "feeUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shareAmount_",
        type: "uint256",
      },
    ],
    name: "getPooledWEMIXBySharesWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "wemixAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wemixAmount_",
        type: "uint256",
      },
    ],
    name: "getSharesByPooledWEMIXWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "shareAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPooledWEMIXWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staking_",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pid_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePhaseOne_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePhaseTwo_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "phaseTwo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardOf_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newUserInfoContract",
        type: "address",
      },
    ],
    name: "updateUserInfoContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "stWemixamount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wemixAmount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "userInfoContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61251280620000f46000396000f3fe6080604052600436106102135760003560e01c806375d9b07411610118578063d13f90b4116100a0578063eb7591761161006f578063eb759176146105e5578063f1068454146105fa578063f2fde38b14610610578063f69e204614610630578063f845b8f01461064557600080fd5b8063d13f90b414610575578063dd62ed3e14610595578063ddca3f43146105b5578063e11f02d7146105ca57600080fd5b8063a457c2d7116100e7578063a457c2d7146104f7578063a9059cbb14610517578063b291809c14610537578063b977d57514610557578063d0e30db01461056d57600080fd5b806375d9b0741461049a5780638da5cb5b146104af57806395d89b41146104cd578063a41e7eb6146104e257600080fd5b8063313ce5671161019b5780635c961a331161016a5780635c961a33146104015780635c975abb1461041757806361d027b31461042f57806370a082311461044f578063715018a61461048557600080fd5b8063313ce5671461036b57806339509351146103875780633b3c9014146103a75780634cf088d9146103c957600080fd5b80631959a002116101e25780631959a002146102bd5780631d62ebd9146102f85780631f72bfb31461031857806323b872dd146103385780632e1a7d4d1461035857600080fd5b806306fdde031461021f578063095ea7b31461024a5780630997e5571461027a57806318160ddd146102a857600080fd5b3661021a57005b600080fd5b34801561022b57600080fd5b50610234610666565b604051610241919061215e565b60405180910390f35b34801561025657600080fd5b5061026a6102653660046121ca565b6106f8565b6040519015158152602001610241565b34801561028657600080fd5b5061029a6102953660046121f4565b610710565b604051908152602001610241565b3480156102b457600080fd5b5060355461029a565b3480156102c957600080fd5b506102dd6102d836600461220d565b6107c4565b60408051938452602084019290925290820152606001610241565b34801561030457600080fd5b5061029a61031336600461220d565b61085a565b34801561032457600080fd5b5061029a6103333660046121f4565b6108b0565b34801561034457600080fd5b5061026a61035336600461222f565b6108de565b61029a6103663660046121f4565b610932565b34801561037757600080fd5b5060405160128152602001610241565b34801561039357600080fd5b5061026a6103a23660046121ca565b610959565b3480156103b357600080fd5b506103c76103c236600461220d565b61097b565b005b3480156103d557600080fd5b5060fc546103e9906001600160a01b031681565b6040516001600160a01b039091168152602001610241565b34801561040d57600080fd5b5061029a60ff5481565b34801561042357600080fd5b5060975460ff1661026a565b34801561043b57600080fd5b5060fb546103e9906001600160a01b031681565b34801561045b57600080fd5b5061029a61046a36600461220d565b6001600160a01b031660009081526033602052604090205490565b34801561049157600080fd5b506103c76109ee565b3480156104a657600080fd5b5061029a610a02565b3480156104bb57600080fd5b506065546001600160a01b03166103e9565b3480156104d957600080fd5b50610234610a11565b3480156104ee57600080fd5b506103c7610a20565b34801561050357600080fd5b5061026a6105123660046121ca565b610c74565b34801561052357600080fd5b5061026a6105323660046121ca565b610cfa565b34801561054357600080fd5b506103c76105523660046121f4565b610d4c565b34801561056357600080fd5b5061029a60fe5481565b61029a610d92565b34801561058157600080fd5b506103c761059036600461226b565b610db3565b3480156105a157600080fd5b5061029a6105b03660046122b8565b610fac565b3480156105c157600080fd5b5061029a610fd7565b3480156105d657600080fd5b506101005461026a9060ff1681565b3480156105f157600080fd5b506103c7611027565b34801561060657600080fd5b5061029a60fd5481565b34801561061c57600080fd5b506103c761062b36600461220d565b611092565b34801561063c57600080fd5b506103c761110b565b34801561065157600080fd5b506101008054046001600160a01b03166103e9565b606060368054610675906122eb565b80601f01602080910402602001604051908101604052809291908181526020018280546106a1906122eb565b80156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b5050505050905090565b600033610706818585611113565b5060019392505050565b600061071b60355490565b6107925760405162461bcd60e51b815260206004820152603760248201527f537457454d49583a3a676574506f6f6c656457454d495842795368617265735760448201527f6974684665653a204e657665722068617070656e65642e00000000000000000060648201526084015b60405180910390fd5b600061079c611238565b90506107a760355490565b6107b18285612336565b6107bb9190612355565b9150505b919050565b6101008054604051636386c1c760e01b81526001600160a01b0384811660048301526000938493849391900490911690636386c1c79060240160606040518083038186803b15801561081557600080fd5b505afa158015610829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d9190612377565b9250925092509193909250565b600080610865611254565b905061087060355490565b61087d5750600092915050565b603554816108a0856001600160a01b031660009081526033602052604090205490565b6107b19190612336565b50919050565b6000806108bb611238565b9050806108ca578291506108aa565b806108d460355490565b6107b19085612336565b600083836108ed8686866112a7565b92506101008054046001600160a01b03161561090c5761090c816112c0565b506101008054046001600160a01b03161561092a5761092a816112c0565b509392505050565b600061093c611328565b61094461136e565b61094d826113c8565b90506107bf600160c955565b60003361070681858561096c8383610fac565b61097691906123a5565b611113565b610983611630565b61010080546001600160a01b038381168302610100600160a81b0319831617808455604080519385900483168085529490910490911660208301527fae244d9ecfc4e9d64dd67b54995137eb142afb5c64f7e4ed215772bc9beef62e91015b60405180910390a15050565b6109f6611630565b610a00600061168a565b565b6000610a0c611238565b905090565b606060378054610675906122eb565b610a28611630565b610a306116dc565b6101005460ff1615610a905760405162461bcd60e51b815260206004820152602360248201527f537457454d49583a3a70686173653a204d75737420626520696e20706861736560448201526210189760e91b6064820152608401610789565b6000610a9a610fd7565b90506000610aa6611254565b60fc5460fd54604051636eeaf0d960e11b815260048101919091523060248201529192506001600160a01b03169063ddd5e1b290604401600060405180830381600087803b158015610af757600080fd5b505af1158015610b0b573d6000803e3d6000fd5b505060fb54604051600093506001600160a01b03909116915084908381818185875af1925050503d8060008114610b5e576040519150601f19603f3d011682016040523d82523d6000602084013e610b63565b606091505b5050905080610bc05760405162461bcd60e51b8152602060048201526024808201527f537457454d49583a3a5f6465706f7369743a204661696c20746f2073656e64206044820152633332b29760e11b6064820152608401610789565b60fc5460fd5460405163695f3f5d60e01b81526001600160a01b039092169163695f3f5d918591610bfb9190839030906000906004016123bd565b6000604051808303818588803b158015610c1457600080fd5b505af1158015610c28573d6000803e3d6000fd5b5050505050610c35611725565b610100805460ff191660011790556040516002907f5fa5c5f918a55cfc7631e486735a0ed6fa5a8c381e41808d7e5545c17fac707290600090a2505050565b60003381610c828286610fac565b905083811015610ce25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610789565b610cef8286868403611113565b506001949350505050565b60003383610d088585611777565b92506101008054046001600160a01b031615610d2757610d27816112c0565b506101008054046001600160a01b031615610d4557610d45816112c0565b5092915050565b610d54611630565b60ff80549082905560408051828152602081018490527f032dc6a2d839eb179729a55633fdf1c41a1fc4739394154117005db2b354b9b591016109e2565b6000610d9c61136e565b610da4611785565b9050610db0600160c955565b90565b600054610100900460ff1615808015610dd35750600054600160ff909116105b80610ded5750303b158015610ded575060005460ff166001145b610e505760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610789565b6000805460ff191660011790558015610e73576000805461ff0019166101001790555b610ec860405180604001604052806014815260200173098d2e2ead2c840a6e8c2d6d2dcce40ae8a9a92b60631b815250604051806040016040528060078152602001660e6e8ae8a9a92b60cb1b815250611968565b610ed061199d565b610ed86119cc565b610ee06119fb565b60fb80546001600160a01b038781166001600160a01b03199283161790925560fc8054928916929091168217905560fd85905560408051918252602082018690527fdfe5cd63052d98022e05b6f634d3184b5d10944000c2f633c83e5b4eaa3fbbf6910160405180910390a160fe83905560ff829055610f5e611a2a565b8015610fa4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600080610fe2611a67565b6101005490915060ff16156110125761271060ff54826110029190612336565b61100c9190612355565b91505090565b61271060fe54826110029190612336565b5090565b61102f611630565b6101008054610100600160a81b03198116808355604080516001600160a01b039385900484168082529490920490921660208201527fae244d9ecfc4e9d64dd67b54995137eb142afb5c64f7e4ed215772bc9beef62e910160405180910390a150565b61109a611630565b6001600160a01b0381166110ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610789565b6111088161168a565b50565b610a00611aee565b6001600160a01b0383166111755760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610789565b6001600160a01b0382166111d65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610789565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000611242611254565b61124a611b58565b610a0c91906123a5565b600061125e611a67565b6101005490915060ff16156112945761271060ff5461271061128091906123e3565b61128a9083612336565b610a0c9190612355565b61271060fe5461271061128091906123e3565b6000336112b5858285611be5565b610cef858585611c59565b6101008054604051636644b83760e11b81526001600160a01b038481166004830152929091049091169063cc89706e90602401600060405180830381600087803b15801561130d57600080fd5b505af1158015611321573d6000803e3d6000fd5b5050505050565b60975460ff1615610a005760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610789565b600260c95414156113c15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610789565b600260c955565b60fb5460009033906001600160a01b031681846114325760405162461bcd60e51b815260206004820152602260248201527f537457454d49583a3a5f77697468647261773a43414e4e4f545f574954484452604482015261415760f01b6064820152608401610789565b6001600160a01b0381166000908152603360205260409020548511156114a85760405162461bcd60e51b815260206004820152602560248201527f537457454d49583a3a5f77697468647261773a4e4f545f454e4f5547485f42416044820152644c414e434560d81b6064820152608401610789565b60006114b2610fd7565b905060006114bf826108b0565b90506114ca87610710565b95506114d68388611e04565b60fc5460fd5460405163ac39871760e01b81526001600160a01b039092169163ac3987179161150e918a9030906000906004016123bd565b600060405180830381600087803b15801561152857600080fd5b505af115801561153c573d6000803e3d6000fd5b50505050611548611aee565b60fb5461155e906001600160a01b031682611f35565b60408051878152602081018990526001600160a01b038516917fadec52fcd1408589179b85e44b434374db078b4eaf793e7d1a1bb0ae4ecfeee5910160405180910390a260fb5460408051848152602081018490526001600160a01b03909216917fc1e1261fb62788fd4036ae7b01d7139f3523dac26e0c98f808154bfa20289fb1910160405180910390a250506101008054046001600160a01b031615905061160b5761160b816112c0565b506101008054046001600160a01b0316156108aa576108aa816112c0565b600160c955565b6065546001600160a01b03163314610a005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610789565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff16610a005760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610789565b61172d6116dc565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600033610706818585611c59565b60fb5460009033906001600160a01b031681346117e45760405162461bcd60e51b815260206004820152601e60248201527f537457454d49583a3a5f6465706f7369743a5a45524f5f4445504f53495400006044820152606401610789565b60006117ee610fd7565b905060006117fb826108b0565b9050611806346108b0565b95506118128387611f35565b60fc5460fd5460405163695f3f5d60e01b81526001600160a01b039092169163695f3f5d91349161184d9190839030906000906004016123bd565b6000604051808303818588803b15801561186657600080fd5b505af115801561187a573d6000803e3d6000fd5b5050505050611887611aee565b60fb5461189d906001600160a01b031682611f35565b60408051348152602081018890526001600160a01b038516917f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca910160405180910390a260fb5460408051848152602081018490526001600160a01b03909216917fc1e1261fb62788fd4036ae7b01d7139f3523dac26e0c98f808154bfa20289fb1910160405180910390a250506101008054046001600160a01b031615905061194a5761194a816112c0565b506101008054046001600160a01b03161561102357611023816112c0565b600054610100900460ff1661198f5760405162461bcd60e51b8152600401610789906123fa565b6119998282611ff6565b5050565b600054610100900460ff166119c45760405162461bcd60e51b8152600401610789906123fa565b610a00612044565b600054610100900460ff166119f35760405162461bcd60e51b8152600401610789906123fa565b610a00612074565b600054610100900460ff16611a225760405162461bcd60e51b8152600401610789906123fa565b610a006120a7565b611a32611328565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861175a3390565b60fc5460fd54604051634c4b4f4160e11b815260048101919091523060248201526000916001600160a01b0316906398969e829060440160206040518083038186803b158015611ab657600080fd5b505afa158015611aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c9190612445565b60fc5460fd5460405163d846612160e01b815260048101919091523060248201526001600160a01b039091169063d846612190604401600060405180830381600087803b158015611b3e57600080fd5b505af1158015611b52573d6000803e3d6000fd5b50505050565b60fc5460fd54604051631069f3b560e01b815260048101919091523060248201526000916001600160a01b031690631069f3b59060440160a06040518083038186803b158015611ba757600080fd5b505afa158015611bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdf919061245e565b51919050565b6000611bf18484610fac565b90506000198114611b525781811015611c4c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610789565b611b528484848403611113565b6001600160a01b038316611cbd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610789565b6001600160a01b038216611d1f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610789565b6001600160a01b03831660009081526033602052604090205481811015611d975760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610789565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611df79086815260200190565b60405180910390a3611b52565b6001600160a01b038216611e645760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610789565b6001600160a01b03821660009081526033602052604090205481811015611ed85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610789565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161122b565b505050565b6001600160a01b038216611f8b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610789565b8060356000828254611f9d91906123a5565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600054610100900460ff1661201d5760405162461bcd60e51b8152600401610789906123fa565b81516120309060369060208501906120ce565b508051611f309060379060208401906120ce565b600054610100900460ff1661206b5760405162461bcd60e51b8152600401610789906123fa565b610a003361168a565b600054610100900460ff1661209b5760405162461bcd60e51b8152600401610789906123fa565b6097805460ff19169055565b600054610100900460ff166116295760405162461bcd60e51b8152600401610789906123fa565b8280546120da906122eb565b90600052602060002090601f0160209004810192826120fc5760008555612142565b82601f1061211557805160ff1916838001178555612142565b82800160010185558215612142579182015b82811115612142578251825591602001919060010190612127565b506110239291505b80821115611023576000815560010161214a565b600060208083528351808285015260005b8181101561218b5785810183015185820160400152820161216f565b8181111561219d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107bf57600080fd5b600080604083850312156121dd57600080fd5b6121e6836121b3565b946020939093013593505050565b60006020828403121561220657600080fd5b5035919050565b60006020828403121561221f57600080fd5b612228826121b3565b9392505050565b60008060006060848603121561224457600080fd5b61224d846121b3565b925061225b602085016121b3565b9150604084013590509250925092565b600080600080600060a0868803121561228357600080fd5b61228c866121b3565b945061229a602087016121b3565b94979496505050506040830135926060810135926080909101359150565b600080604083850312156122cb57600080fd5b6122d4836121b3565b91506122e2602084016121b3565b90509250929050565b600181811c908216806122ff57607f821691505b602082108114156108aa57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561235057612350612320565b500290565b60008261237257634e487b7160e01b600052601260045260246000fd5b500490565b60008060006060848603121561238c57600080fd5b8351925060208401519150604084015190509250925092565b600082198211156123b8576123b8612320565b500190565b93845260208401929092526001600160a01b031660408301521515606082015260800190565b6000828210156123f5576123f5612320565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561245757600080fd5b5051919050565b600060a0828403121561247057600080fd5b60405160a0810181811067ffffffffffffffff821117156124a157634e487b7160e01b600052604160045260246000fd5b80604052508251815260208301516020820152604083015160408201526060830151606082015260808301516080820152809150509291505056fea264697066735822122063d18a6f016c68475cdb0cf0fbe622897c872e60dad54fd5a880008ecdb4ac6b64736f6c63430008090033";

type StWEMIXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StWEMIXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StWEMIX__factory extends ContractFactory {
  constructor(...args: StWEMIXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StWEMIX & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StWEMIX__factory {
    return super.connect(runner) as StWEMIX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StWEMIXInterface {
    return new Interface(_abi) as StWEMIXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StWEMIX {
    return new Contract(address, _abi, runner) as unknown as StWEMIX;
  }
}
